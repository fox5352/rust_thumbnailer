name: Build and Publish
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build - ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: yarn build
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: yarn build
          - host: macos-latest
            target: x86_64-apple-darwin
            build: yarn build

    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: ${{ matrix.settings.build }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: |
            *.node
            index.js
            index.d.ts
            package.json

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Move artifacts
        run: |
          mkdir -p dist
          for dir in artifacts/bindings-*; do
            mv $dir/*.node dist/
          done
          cp artifacts/bindings-x86_64-unknown-linux-gnu/index.js .
          cp artifacts/bindings-x86_64-unknown-linux-gnu/index.d.ts .
          cp artifacts/bindings-x86_64-unknown-linux-gnu/package.json .

      - name: List files
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.node
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
